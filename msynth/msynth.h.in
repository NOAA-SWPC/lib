/*
 * msynth.h
 */

#ifndef INCLUDED_msynth_h
#define INCLUDED_msynth_h

#define MSYNTH_IGRF_FILE       "@abs_top_builddir@/msynth/cof/igrf12coeffs.txt"
#define MSYNTH_WMM_FILE        "@abs_top_builddir@/msynth/cof/wmm/WMM2015.COF"
#define MSYNTH_MF7_FILE        "@abs_top_builddir@/msynth/cof/MF7.cof"
#define MSYNTH_NGDC720_FILE    "@abs_top_builddir@/msynth/cof/NGDC-720_V3p1.cof"
#define MSYNTH_EMM_FILE        "@abs_top_builddir@/msynth/cof/EMM2015_crust.cof"
#define MSYNTH_CHAOS_FILE      "@abs_top_builddir@/msynth/cof/CHAOS-5_core.shc"
#define MSYNTH_BOUMME_FILE     "@abs_top_builddir@/msynth/cof/boumme/boumme-0.1.txt"

/* maximum number of snapshot models */
#define MSYNTH_MAX_SNAPSHOT    500

typedef struct
{
  size_t nmax;       /* maximum spherical harmonic degree */
  double R;          /* geomagnetic reference radius (km) */

  size_t nnm;        /* number of (n,m) pairs */
  size_t p;          /* total number of model coefficients */

  /*
   * n_snapshot should equal n_epochs under most conditions; they
   * will differ when reading in a series of model files
   */
  size_t n_snapshot; /* number of snapshot models allocated */
  size_t n_epochs;   /* number of snapshot models currently stored */
  double *c;         /* model coefficients */
  double *epochs;    /* model epochs (years) */

  size_t sv_offset;  /* offset into 'c' of SV coefficients */
  size_t sa_offset;  /* offset into 'c' of SA coefficients */

  double *cosmphi;   /* array of cos(m phi) */
  double *sinmphi;   /* array of sin(m phi) */

  double *Plm;       /* associated legendres */
  double *dPlm;      /* associated legendre derivatives */

  double *dX;        /* internal basis functions for X */
  double *dY;        /* internal basis functions for Y */
  double *dZ;        /* internal basis functions for Z */

  size_t nmax_ext;   /* external maximum spherical harmonic degree */
  size_t nnm_ext;    /* number of external (n,m) pairs */
  double *dX_ext;    /* external basis functions for X */
  double *dY_ext;    /* external basis functions for Y */
  double *dZ_ext;    /* external basis functions for Z */

  size_t eval_nmin;  /* nmin for evaluation */
  size_t eval_nmax;  /* nmax for evaluation */

  double data_start; /* start of data interval (years) */
  double data_end;   /* end of data interval (years) */
} msynth_workspace;

/*
 * Prototypes
 */

msynth_workspace *msynth_alloc(const size_t nmax, const size_t nsnapshot, const double *epochs);
msynth_workspace *msynth_alloc2(const size_t nmax_int, const size_t nmax_ext,
                                const size_t nsnapshot, const double *epochs);
void msynth_free(msynth_workspace *w);
int msynth_set(const size_t nmin, const size_t nmax, msynth_workspace *w);
int msynth_set_data_interval(const double data_start, const double data_end,
                             msynth_workspace *w);
int msynth_eval(const double t, const double r, const double theta,
                const double phi, double B[4], msynth_workspace *w);
int msynth_eval_dBdt(const double t, const double r, const double theta,
                     const double phi, double dBdt[4],
                     msynth_workspace *w);
msynth_workspace *msynth_read(const char *filename);
msynth_workspace *msynth_read2(const char *filename, msynth_workspace *w);
int msynth_write(const char *filename, const double epoch,
                 const msynth_workspace *w);
msynth_workspace *msynth_copy(const msynth_workspace *w);
msynth_workspace *msynth_diff(const double epoch, const msynth_workspace *msynth1,
                              const msynth_workspace *msynth2);
int msynth_extrapolate_g(const double t, msynth_workspace *w);
int msynth_print_spectrum(const char *filename, const double t,
                          const msynth_workspace *w);
int msynth_print_spectrum_m(const char *filename, const msynth_workspace *w);
double msynth_spectrum(const double t, const size_t n, const msynth_workspace *w);
double msynth_spectrum_sv(const double t, const size_t n, const msynth_workspace *w);
double msynth_spectrum_sa(const double t, const size_t n, const msynth_workspace *w);
size_t msynth_nmidx(const size_t n, const int m, const msynth_workspace *w);
double msynth_get_epoch(const double t, const msynth_workspace *w);
double msynth_get_mf(const double t, const size_t idx, const msynth_workspace *w);
double msynth_get_sv(const double t, const size_t idx, const msynth_workspace *w);
double msynth_get_sa(const double t, const size_t idx, const msynth_workspace *w);
double msynth_get_gnm(const double t, const size_t n, int m,
                      const msynth_workspace *w);
double msynth_get_dgnm(const double t, const size_t n, int m,
                       const msynth_workspace *w);
double msynth_get_ddgnm(const double t, const size_t n, int m,
                        const msynth_workspace *w);
size_t msynth_epoch_idx(const double t, const msynth_workspace *w);
int msynth_calc_sv(msynth_workspace *w);

/* msynth_green.c */
int msynth_green(const double r, const double theta, const double phi,
                 msynth_workspace *w);
int msynth_green_ext(const double r, const double theta, const double phi,
                     msynth_workspace *w);

/* msynth_arnaud.c */
msynth_workspace *msynth_arnaud_read(const char *filename);

/* msynth_chaos.c */
msynth_workspace *msynth_chaos_read(const char *filename);

/* msynth_crust.c */
msynth_workspace *msynth_mf7_read(const char *filename);
msynth_workspace *msynth_ngdc720_read(const char *filename);
msynth_workspace *msynth_emm_read(const char *filename);

/* msynth_emm.c */
int msynth_emm_write(const char *filename, const double year,
                     const msynth_workspace *w);
int msynth_emm_write_sv(const char *filename, const double year,
                        const msynth_workspace *w);

/* msynth_igrf.c */
msynth_workspace *msynth_igrf_read(const char *filename);
msynth_workspace *msynth_igrf_read_mf(const char *filename);
int msynth_igrf_read_sv(const char *filename, msynth_workspace *w);
int msynth_igrf_write(const char *filename, const char *desc, const msynth_workspace *w);
int msynth_igrf_sv_write(const char *filename, const char *desc, const msynth_workspace *w);

/* msynth_pomme.c */
msynth_workspace *msynth_pomme_read(const char *filename);

/* msynth_wmm.c */
msynth_workspace *msynth_wmm_read(const char *filename);
int msynth_wmm_write(const char *filename, const msynth_workspace *w);
int msynth_wmm_replace_sv(const msynth_workspace *w_sv, msynth_workspace *w);

#endif /* INCLUDED_msynth_h */
